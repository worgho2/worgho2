name: RELEASE

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  deployments: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release-please
        with:
          token: ${{ secrets.GH_PAT }}
          release-type: node

      - uses: actions/checkout@v4
        if: ${{ steps.release-please.outputs.release_created }}
        with:
          fetch-depth: 1

      - uses: pnpm/action-setup@v4
        if: ${{ steps.release-please.outputs.release_created }}
        with:
          version: 9
          run_install: false

      - uses: actions/setup-node@v4
        if: ${{ steps.release-please.outputs.release_created }}
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Deploy to Production
        if: ${{ steps.release-please.outputs.release_created }}
        id: deployment
        run: |
          pnpm install
          pnpm sst deploy --stage=production
          echo "url=$(jq -r .webNextJsAppUrl .sst/outputs.json)" >> "$GITHUB_OUTPUT"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLOUDFLARE_DOMAIN_NAME: ${{ vars.CLOUDFLARE_DOMAIN_NAME }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_DEFAULT_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_DEFAULT_ACCOUNT_ID }}

      - name: Create Github Deployment
        if: ${{ steps.release-please.outputs.release_created }}
        uses: chrnorm/deployment-action@v2.0.7
        with:
          token: ${{ secrets.GH_PAT }}
          environment: Production
          environment-url: ${{ steps.deployment.outputs.url }}
          initial-status: 'success'
          production-environment: true
